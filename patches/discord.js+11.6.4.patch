diff --git a/node_modules/discord.js/.DS_Store b/node_modules/discord.js/.DS_Store
new file mode 100644
index 0000000..2acf334
Binary files /dev/null and b/node_modules/discord.js/.DS_Store differ
diff --git a/node_modules/discord.js/src/.DS_Store b/node_modules/discord.js/src/.DS_Store
new file mode 100644
index 0000000..d6fe3f1
Binary files /dev/null and b/node_modules/discord.js/src/.DS_Store differ
diff --git a/node_modules/discord.js/src/client/.DS_Store b/node_modules/discord.js/src/client/.DS_Store
new file mode 100644
index 0000000..04a57e9
Binary files /dev/null and b/node_modules/discord.js/src/client/.DS_Store differ
diff --git a/node_modules/discord.js/src/client/ClientDataManager.js b/node_modules/discord.js/src/client/ClientDataManager.js
index 4f0f2d7..5ffac2c 100644
--- a/node_modules/discord.js/src/client/ClientDataManager.js
+++ b/node_modules/discord.js/src/client/ClientDataManager.js
@@ -77,8 +77,9 @@ class ClientDataManager {
             channel = new StoreChannel(guild, data);
             break;
         }
-
-        guild.channels.set(channel.id, channel);
+        if (channel) {
+          guild.channels.set(channel.id, channel);
+        }
       }
     }
 
diff --git a/node_modules/discord.js/src/client/actions/MessageUpdate.js b/node_modules/discord.js/src/client/actions/MessageUpdate.js
index 4e0392d..da62579 100644
--- a/node_modules/discord.js/src/client/actions/MessageUpdate.js
+++ b/node_modules/discord.js/src/client/actions/MessageUpdate.js
@@ -6,7 +6,7 @@ class MessageUpdateAction extends Action {
     const client = this.client;
 
     const channel = client.channels.get(data.channel_id);
-    if (channel) {
+    if (channel && channel.messages) {
       const message = channel.messages.get(data.id);
       if (message) {
         message.patch(data);
diff --git a/node_modules/discord.js/src/client/websocket/.DS_Store b/node_modules/discord.js/src/client/websocket/.DS_Store
new file mode 100644
index 0000000..99f12f9
Binary files /dev/null and b/node_modules/discord.js/src/client/websocket/.DS_Store differ
diff --git a/node_modules/discord.js/src/client/websocket/packets/.DS_Store b/node_modules/discord.js/src/client/websocket/packets/.DS_Store
new file mode 100644
index 0000000..8e68759
Binary files /dev/null and b/node_modules/discord.js/src/client/websocket/packets/.DS_Store differ
diff --git a/node_modules/discord.js/src/client/websocket/packets/handlers/Ready.js b/node_modules/discord.js/src/client/websocket/packets/handlers/Ready.js
index 3eb80a2..3df30e5 100644
--- a/node_modules/discord.js/src/client/websocket/packets/handlers/Ready.js
+++ b/node_modules/discord.js/src/client/websocket/packets/handlers/Ready.js
@@ -38,7 +38,7 @@ class ReadyHandler extends AbstractHandler {
     if (data.notes) {
       for (const user of Object.keys(data.notes)) {
         let note = data.notes[user];
-        if (!note.length) note = null;
+        if (!note || !note.length) note = null;
 
         client.user.notes.set(user, note);
       }
diff --git a/node_modules/discord.js/src/util/Constants.js b/node_modules/discord.js/src/util/Constants.js
index 3a2392b..fa06617 100644
--- a/node_modules/discord.js/src/util/Constants.js
+++ b/node_modules/discord.js/src/util/Constants.js
@@ -687,9 +687,9 @@ exports.UserSettingsMap = {
      * @property {boolean} mutualFriends Only mutual friends
      */
     return {
-      all: flags.all || false,
-      mutualGuilds: flags.all ? true : flags.mutual_guilds || false,
-      mutualFriends: flags.all ? true : flags.mutualFriends || false,
+      all: flags?.all || false,
+      mutualGuilds: flags?.all ? true : flags?.mutual_guilds || false,
+      mutualFriends: flags?.all ? true : flags?.mutualFriends || false,
     };
   },
 };
